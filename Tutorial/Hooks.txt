1. useState

  const [blogs,setBlogs]=useState(
    [
      { title: 'My new website', body: 'lorem ipsum...', author: 'mario', id: 1 },
      { title: 'Welcome party!', body: 'lorem ipsum...', author: 'yoshi', id: 2 },
      { title: 'Web dev top tips', body: 'lorem ipsum...', author: 'mario', id: 3 }
    ]
  );

  const handleDelete = (id) => {
    const newBlogs = blogs.filter(blog => blog.id !== id);
    setBlogs(newBlogs);
  };

2. useEffect

import { useState, useEffect } from 'react';

3. Custom Hook

a) make a separate useFetch.js as

import { useState, useEffect } from 'react';

const useFetch = (url) => {

  const [data,setData]=useState(null);
  const [isPending, setIsPending]=useState(true);
  const [error,setError]=useState(null);

  useEffect(() => {
      fetch(url)
          .then(res => {
            if(!res.ok){
              throw Error('Couldn\'t fetch data for that resource');
            }
            return res.json();
          })
        
            .then(data => {
              setData(data);
              setIsPending(false);
              setError(null);
            })
            .catch((err) =>{
              setError(err.message);
              setIsPending(false);
            })
  },[url]);

  return { data, isPending, error }
}

export default useFetch;



b) in Home.js

import useFetch from './useFetch';

const Home = () => {

  const { data: blogs, isPending, error } = useFetch('http://localhost:8000/blogs');

  return (
    <div className="home">
      { error && <div>{ error }</div> }
      { isPending && <div>Loading...</div> }
      { blogs && <BlogList blogs = {blogs} title ="All Blogs!" /> }
    </div>
  );
}

export default Home; 